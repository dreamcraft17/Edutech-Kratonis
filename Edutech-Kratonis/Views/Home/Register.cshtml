@model Edutech_Kratonis.ViewModel.EducationTechUserViewModel
@{
    ViewBag.Title = "Register";
}

@{
    Layout = null;
}
<head>
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
            font-family: 'Arial', sans-serif;
        }

        .login-page {
            display: flex;
            height: 100vh;
            justify-content: center;
            align-items: center;
        }

        .login-container {
            background-color: #fff;
            border-radius: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 80%;
            max-height: 600px;
            width: 900px;
            overflow: hidden;
        }

        .login-image {
            flex: 1;
            background: url('~/Assets/Login/login1.png') center center/cover no-repeat;
        }

        .login-form {
            flex: 1;
            padding: 40px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

            .login-form h2 {
                margin-bottom: 20px;
                font-size: 28px;
                color: #333;
            }

        .form-group {
            margin-bottom: 20px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            font-size: 16px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        .btn {
            background-color: #f88379;
            border: none;
            color: #fff;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn:hover {
                background-color: #e87063;
            }

        .form-group p {
            margin-top: 10px;
            font-size: 14px;
            text-align: center;
        }

            .form-group p a {
                color: #f88379;
                text-decoration: none;
            }

                .form-group p a:hover {
                    text-decoration: underline;
                }
                .edutech-logo{
                    height:30px;
                }
    </style>
    <title> EduTech - Login</title>
</head>

<div class="login-page">
    <div class="login-container">
        <div class="login-image">
            <img src="~/Assets/Logo/logo3.png" alt="halo"/>
        </div>
        <div class="login-form">

            <h2 class="text-center">Register</h2>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.name, "Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your name", oninput = "capitalizeFirstLetter(this)" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your email" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter your username" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.password, new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.created_at, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.created_at)
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.updated_at, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.updated_at)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sign Up" class="btn btn-primary" />
                </div>
                <br />
                <div class="col-md-offset-2 col-md-10">
                    Already Have Acocunt?
                    @Html.ActionLink("Login", "Login", "Account")
                </div>
            </div>
        </div>
            }

        

        </div>
    </div>
</div>
<script>
    function capitalizeFirstLetter(input) {
        var words = input.value.toLowerCase().split(' ');
        for (var i = 0; i < words.length; i++) {
            words[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);
        }
        input.value = words.join(' ');
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
